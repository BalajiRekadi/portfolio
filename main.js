(()=>{"use strict";var n={785:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),A=t.n(r),a=t(645),o=t.n(a),i=t(667),d=t.n(i),c=new URL(t(591),t.b),s=o()(A()),l=d()(c);s.push([n.id,`.skill-image {\n    background-image: url(${l});\n    height: 100%;\n    width: 100%;\n}`,"",{version:3,sources:["webpack://./src/components/skillcard.css"],names:[],mappings:"AAAA;IACI,yDAA0C;IAC1C,YAAY;IACZ,WAAW;AACf",sourcesContent:[".skill-image {\n    background-image: url(../resources/js.svg);\n    height: 100%;\n    width: 100%;\n}"],sourceRoot:""}]);const C=s},902:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),A=t.n(r),a=t(645),o=t.n(a),i=t(667),d=t.n(i),c=new URL(t(885),t.b),s=o()(A()),l=d()(c);s.push([n.id,`* {\n    margin: 0;\n    padding: 0;\n    font-family: monospace, 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 16px;\n}\n\n.root {\n    --text-color: #F5F3F4;\n    --text-color-grey: #B1A7A6;\n    --background: #161A1D;\n    --secondary-background: #0C0C0C;\n    --accent: #A4161A;\n    --border-radius: 12px;\n\n    --three-text-width: 29vw;\n    --minmax-value: 300px; /* should be mq breakpoint/2.5 */\n    /*--media-query-breakpoint: 750px;*/\n\n    padding: 0 10%;\n    background-color: var(--background);\n    color: var(--text-color);\n}\n@media(max-width: 750px) {\n    .root {\n        padding: 0;\n    }\n}\n\n\n\n\n.header {\n    padding: 1.5rem 4rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.header .logo {\n    height: 4rem;\n    width: 4rem;\n    border-radius: 50%;\n    background-color: var(--accent);\n}\n\n.header .logo span {\n    padding-left: 0.8rem;\n    line-height: 4rem;\n    font-weight: 900;\n    font-size: 1.6rem;\n}\n\n.header nav {\n    display: flex;\n    gap: 2rem;\n    padding: 1rem 0;\n}\n@media(max-width: 750px) {\n    .header nav {\n        padding: 0;\n        gap: 0;\n        display: none;\n    }\n}\n\n\n\n.hero {\n    background-color: var(--secondary-background);\n    border-radius: var(--border-radius);\n    display: flex;\n}\n@media(max-width: 750px) {\n    .hero {\n        flex-direction: column;\n        position: relative;\n        border-radius: 0;\n    }\n}\n\n.photo-container {\n    width: 50%;\n    height: 75vh;\n}\n\n.photo-container .photo {\n    background: url(${l});\n    background-repeat: no-repeat;\n    border-radius: var(--border-radius);\n    filter: grayscale(1);\n    max-width: 100%;\n    height: 100%;\n    padding: 3rem 0 0 1rem;\n}\n@media(max-width: 750px) {\n    .photo-container photo {\n        width: 100vw;\n    }\n}\n\n.greetings {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    gap: 1.5rem;\n    padding: 0 5vw;\n    min-width: 30vw;\n}\n@media(max-width: 750px) {\n    .greetings {\n        position: absolute;\n        top: 88%;\n    }\n}\n\n.one {\n    font-size: 2.5vw;\n    font-weight: 600;\n    color: var(--text-color-grey);\n}\n@media(max-width: 750px) {\n    .one {\n        font-size: 10vw;\n        color: var(--text-color);\n    }\n}\n\n.two {\n    font-size: 2vw;\n    font-weight: 600;\n    color: var(--text-color-grey);\n}\n.two span {\n    font-size: 3.5vw;\n    font-weight: 600;\n    text-wrap: nowrap;\n    color: var(--text-color);\n}\n@media(max-width: 750px) {\n    .two {\n        font-size: 8vw;\n    }\n    .two span {\n        font-size: 12vw;\n    }\n}\n\n.three {\n    font-size: 3vw;\n    font-weight: 600;\n    color: var(--accent);\n    overflow: hidden;\n    width: var(--three-text-width);\n    white-space: nowrap;\n    border-right: 4px solid var(--text-color);\n    animation: \n      typing 7s steps(80) infinite,\n      blink-caret .75s step-end infinite;\n    animation-delay: 1s;\n}\n@keyframes typing {\n    0% { width: 0 }\n    20% { width: var(--three-text-width) }\n    100% { width: var(--three-text-width) }\n}\n@keyframes blink-caret {\n    from, to { border-color: transparent }\n    50% { border-color: var(--text-color); }\n}\n@media(max-width: 750px) {\n    .three {\n        font-size: 7vw;\n    }\n    @keyframes typing {\n        0% { width: 0 }\n        20% { width: 75%; }\n        100% { width: 75%; }\n    }\n}\n\n\n\n\n\n.heading {\n    padding: 5rem;\n    text-align: center;\n    font-size: 1.5rem;\n}\n@media(max-width: 750px) {\n    .heading {\n        font-size: 1rem;\n    }\n}\n\n@media(max-width: 750px) {\n    .skills {\n        margin-top: 11rem;\n    }\n}\n\n.skill-card-container {\n    display: flex;\n    gap: 2vw;\n    padding: 0 5vw;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n}\n\n.skill-card {\n    width: 12vw;\n    height: 15vw;\n    background-color: var(--secondary-background);\n    display: block;\n    border-radius: var(--border-radius);\n    min-width: 10rem;\n    min-height: 15rem;\n}\n\n.skill-card .top {\n    width: 100%;\n    height: 70%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* .skill-image {\n    background-image: url(./src/resources/js.svg);\n} */\n\n.skill-card .bottom {\n    height: 30%;\n    padding: 0 2rem 2rem;\n    text-align: center;\n    color: var(--text-color);\n}\n\n\n\n\n.timeline {\n    padding: 0 10vw;\n}\n\n.timeline .paragraph {\n    padding: 0.5rem 1rem;\n    margin: 1rem;\n    border-left: 1px solid var(--accent);\n    color: var(--text-color-grey);\n    height: auto;\n    display: block;\n}\n\n.timeline .paragraph p {\n    padding-left: 1rem;\n}\n\n.timeline .dot {\n    width: 0.7rem;\n    height: 0.7rem;\n    border-radius: 50%;\n    background-color: var(--accent);\n    margin: 0.2rem 1rem 0 0;;\n}\n\n.timeline .para-header {\n    display: flex;\n    margin: 0 0.7rem;\n    color: var(--text-color);\n}\n\n\n\n\n.project-cards {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n.project-cards .card {\n    width: 20rem;\n    Height: 30rem;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--secondary-background);\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border: var(--border-radius);\n}\n\n\n\n\n\n\n.menu-item {\n    color: var(--text-color-grey);\n    text-decoration: none;\n}\n`,"",{version:3,sources:["webpack://./style.css"],names:[],mappings:"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",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    font-family: monospace, 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 16px;\n}\n\n.root {\n    --text-color: #F5F3F4;\n    --text-color-grey: #B1A7A6;\n    --background: #161A1D;\n    --secondary-background: #0C0C0C;\n    --accent: #A4161A;\n    --border-radius: 12px;\n\n    --three-text-width: 29vw;\n    --minmax-value: 300px; /* should be mq breakpoint/2.5 */\n    /*--media-query-breakpoint: 750px;*/\n\n    padding: 0 10%;\n    background-color: var(--background);\n    color: var(--text-color);\n}\n@media(max-width: 750px) {\n    .root {\n        padding: 0;\n    }\n}\n\n\n\n\n.header {\n    padding: 1.5rem 4rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.header .logo {\n    height: 4rem;\n    width: 4rem;\n    border-radius: 50%;\n    background-color: var(--accent);\n}\n\n.header .logo span {\n    padding-left: 0.8rem;\n    line-height: 4rem;\n    font-weight: 900;\n    font-size: 1.6rem;\n}\n\n.header nav {\n    display: flex;\n    gap: 2rem;\n    padding: 1rem 0;\n}\n@media(max-width: 750px) {\n    .header nav {\n        padding: 0;\n        gap: 0;\n        display: none;\n    }\n}\n\n\n\n.hero {\n    background-color: var(--secondary-background);\n    border-radius: var(--border-radius);\n    display: flex;\n}\n@media(max-width: 750px) {\n    .hero {\n        flex-direction: column;\n        position: relative;\n        border-radius: 0;\n    }\n}\n\n.photo-container {\n    width: 50%;\n    height: 75vh;\n}\n\n.photo-container .photo {\n    background: url(./src/resources/elon.png);\n    background-repeat: no-repeat;\n    border-radius: var(--border-radius);\n    filter: grayscale(1);\n    max-width: 100%;\n    height: 100%;\n    padding: 3rem 0 0 1rem;\n}\n@media(max-width: 750px) {\n    .photo-container photo {\n        width: 100vw;\n    }\n}\n\n.greetings {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    gap: 1.5rem;\n    padding: 0 5vw;\n    min-width: 30vw;\n}\n@media(max-width: 750px) {\n    .greetings {\n        position: absolute;\n        top: 88%;\n    }\n}\n\n.one {\n    font-size: 2.5vw;\n    font-weight: 600;\n    color: var(--text-color-grey);\n}\n@media(max-width: 750px) {\n    .one {\n        font-size: 10vw;\n        color: var(--text-color);\n    }\n}\n\n.two {\n    font-size: 2vw;\n    font-weight: 600;\n    color: var(--text-color-grey);\n}\n.two span {\n    font-size: 3.5vw;\n    font-weight: 600;\n    text-wrap: nowrap;\n    color: var(--text-color);\n}\n@media(max-width: 750px) {\n    .two {\n        font-size: 8vw;\n    }\n    .two span {\n        font-size: 12vw;\n    }\n}\n\n.three {\n    font-size: 3vw;\n    font-weight: 600;\n    color: var(--accent);\n    overflow: hidden;\n    width: var(--three-text-width);\n    white-space: nowrap;\n    border-right: 4px solid var(--text-color);\n    animation: \n      typing 7s steps(80) infinite,\n      blink-caret .75s step-end infinite;\n    animation-delay: 1s;\n}\n@keyframes typing {\n    0% { width: 0 }\n    20% { width: var(--three-text-width) }\n    100% { width: var(--three-text-width) }\n}\n@keyframes blink-caret {\n    from, to { border-color: transparent }\n    50% { border-color: var(--text-color); }\n}\n@media(max-width: 750px) {\n    .three {\n        font-size: 7vw;\n    }\n    @keyframes typing {\n        0% { width: 0 }\n        20% { width: 75%; }\n        100% { width: 75%; }\n    }\n}\n\n\n\n\n\n.heading {\n    padding: 5rem;\n    text-align: center;\n    font-size: 1.5rem;\n}\n@media(max-width: 750px) {\n    .heading {\n        font-size: 1rem;\n    }\n}\n\n@media(max-width: 750px) {\n    .skills {\n        margin-top: 11rem;\n    }\n}\n\n.skill-card-container {\n    display: flex;\n    gap: 2vw;\n    padding: 0 5vw;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n}\n\n.skill-card {\n    width: 12vw;\n    height: 15vw;\n    background-color: var(--secondary-background);\n    display: block;\n    border-radius: var(--border-radius);\n    min-width: 10rem;\n    min-height: 15rem;\n}\n\n.skill-card .top {\n    width: 100%;\n    height: 70%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* .skill-image {\n    background-image: url(./src/resources/js.svg);\n} */\n\n.skill-card .bottom {\n    height: 30%;\n    padding: 0 2rem 2rem;\n    text-align: center;\n    color: var(--text-color);\n}\n\n\n\n\n.timeline {\n    padding: 0 10vw;\n}\n\n.timeline .paragraph {\n    padding: 0.5rem 1rem;\n    margin: 1rem;\n    border-left: 1px solid var(--accent);\n    color: var(--text-color-grey);\n    height: auto;\n    display: block;\n}\n\n.timeline .paragraph p {\n    padding-left: 1rem;\n}\n\n.timeline .dot {\n    width: 0.7rem;\n    height: 0.7rem;\n    border-radius: 50%;\n    background-color: var(--accent);\n    margin: 0.2rem 1rem 0 0;;\n}\n\n.timeline .para-header {\n    display: flex;\n    margin: 0 0.7rem;\n    color: var(--text-color);\n}\n\n\n\n\n.project-cards {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n.project-cards .card {\n    width: 20rem;\n    Height: 30rem;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--secondary-background);\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border: var(--border-radius);\n}\n\n\n\n\n\n\n.menu-item {\n    color: var(--text-color-grey);\n    text-decoration: none;\n}\n"],sourceRoot:""}]);const C=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,A,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(o[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&o[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),A&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=A):s[4]="".concat(A)),e.push(s))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(A," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],i=0;i<n.length;i++){var d=n[i],c=r.base?d[0]+r.base:d[0],s=a[c]||0,l="".concat(c," ").concat(s);a[c]=s+1;var C=t(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==C)e[C].references++,e[C].updater(p);else{var m=A(p,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function A(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,A){var a=r(n=n||[],A=A||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var i=t(a[o]);e[i].references--}for(var d=r(n,A),c=0;c<a.length;c++){var s=t(a[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},885:n=>{n.exports="assets/4702281ad9e927aa8da3.png"},591:n=>{n.exports="assets/3d3f5be6c176d6b95ab6.svg"}},e={};function t(r){var A=e[r];if(void 0!==A)return A.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{class n extends HTMLElement{constructor(n){super(),this.value=n}connectedCallback(){this.innerHTML=`\n      <a class="menu-item" href="">${this.innerText}</a>\n    `}}const e=n;class r extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n            <div class="dot"></div>\n            ${this.innerText}\n      `}}const A=r;class a extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=`\n        <p>\n            ${this.innerText}\n        </p>\n      `}}const o=a;class i extends HTMLElement{constructor(){super()}connectedCallback(){const n=this.getAttribute("src");this.innerHTML=`\n        <div class="top">\n          <img src="${n}"/>\n        </div>\n        <div class="bottom">${this.innerText}</div>\n      `}}const d=i;var c=t(379),s=t.n(c),l=t(795),C=t.n(l),p=t(569),m=t.n(p),h=t(565),u=t.n(h),g=t(216),B=t.n(g),I=t(589),f=t.n(I),v=t(785),w={};w.styleTagTransform=f(),w.setAttributes=u(),w.insert=m().bind(null,"head"),w.domAPI=C(),w.insertStyleElement=B(),s()(v.Z,w),v.Z&&v.Z.locals&&v.Z.locals;class x extends HTMLElement{constructor(n,e,t){super(),this.name=n,this.src=e,this.size=t}connectedCallback(){const n=this.getAttribute("name"),e=(this.getAttribute("src"),this.getAttribute("size"));this.innerHTML=`\n        <div class="top">\n            <img class="skill-image" width="${e}%"/>\n        </div>\n        <div class="bottom">${n}</div>\n      `}}const b=x;var y=t(902),k={};k.styleTagTransform=f(),k.setAttributes=u(),k.insert=m().bind(null,"head"),k.domAPI=C(),k.insertStyleElement=B(),s()(y.Z,k),y.Z&&y.Z.locals&&y.Z.locals,customElements.define("menu-item",e),customElements.define("skill-card",b),customElements.define("my-paragraph",o),customElements.define("para-header",A),customElements.define("project-card",d)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,